@page "/mainpage"
@using BookCatalog.Core.Web.Models
@using BookCatalog.Core.Web.Models.DTOs.Book
@using Domain.Enums
@inject HttpClient HttpClient

@code {
    public List<GetAllBooksDTO> books = new List<GetAllBooksDTO>();
    private List<Author> authors = new List<Author>();
    protected override async Task OnInitializedAsync()
    {
        try
        {
            books = await HttpClient.GetFromJsonAsync<List<GetAllBooksDTO>>("https://localhost:7282/api/Book/GetAllBooks");
            authors = await HttpClient.GetFromJsonAsync<List<Author>>("https://localhost:7282/api/Author/GetAllAuthors");
        }
        catch (Exception exception)
        {
            Console.WriteLine(exception.Message);
        }
    }
}

<div class="main-container">
    <div class="navbar">
        <div class="logo">
            <img src="images/logo.png" alt="E-Book Store" />
        </div>
        <div class="search-bar">
            <input type="text" placeholder="Search..." />
            <button>Search</button>
        </div>
        <div class="auth-links">
            <a href="/login">Login</a>
            <a href="/register">Register</a>
        </div>
    </div>

    <div class="books-list" style="margin-top: 7rem;">
        @if (books != null && books.Any())
        {
            <div class="d-flex flex-wrap justify-content-start">
            @foreach (var book in books)
            {
                    <div class="card" style="width: 13rem; height:24rem; margin: 8px;">
                    <div class="card-body">
                        <img style="width:170px; height:200px" src="@book.Thubnail" alt="@book.Thubnail" class="book-thubnail" />
                            <p class="card-title" style="font-size: 14px"><strong>Name:</strong> @book.Name</p>
                            <p style="font-size: 14px">
                            <strong>Author:</strong>
                                @if (book.Authors is not null && book.Authors.Any())
                                {
                                    @string.Join(", ", book.Authors.Select(a => a.FullName))
                                }
                            </p>

                            <p style="font-size: 14px"><strong>Category:</strong> @book.Categories</p>
                            <p style="font-size: 14px"><strong>Publish:</strong> @book.PublishedDate.ToString("yyyy-MM-dd")</p>
                    </div>
                </div>
            }
            </div>
        }
        else
        {
            <p>No books found</p>
        }
    </div>
</div>
